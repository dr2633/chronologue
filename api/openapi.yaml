openapi: 3.1.0
info:
  title: Chronologue Memory Orchestration API
  version: 0.1.0
  description: >
    API for managing recurring grocery orders, weekly approvals, delivery tracking, and calendar event integration.

servers:
  - url: http://localhost:8000

paths:
  /api/orders:
    post:
      summary: Create a new grocery memory
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderMemory'
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                    description: Unique identifier for the created order

  /api/orders/{order_id}:
    get:
      summary: Retrieve an existing grocery memory
      operationId: getOrder
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order memory retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderMemory'
        '404':
          description: Order not found

    patch:
      summary: Edit grocery memory items
      operationId: updateOrder
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GroceryItem'
      responses:
        '200':
          description: Order updated successfully
        '404':
          description: Order not found

  /api/orders/{order_id}/approval:
    post:
      summary: Submit approval decision
      operationId: submitApproval
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequest'
      responses:
        '200':
          description: Approval recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                  status:
                    type: string
                  approval:
                    type: string
        '404':
          description: Order not found

  /api/feedback:
    post:
      summary: Submit delivery feedback
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackSubmission'
      responses:
        '200':
          description: Feedback recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /api/ics/{order_id}/purchase:
    get:
      summary: Generate purchase approval calendar event
      operationId: generatePurchaseIcs
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ICS calendar file for purchase approval
          content:
            text/calendar:
              schema:
                type: string
        '404':
          description: Order not found

  /api/ics/{order_id}/delivery:
    get:
      summary: Generate delivery calendar event
      operationId: generateDeliveryIcs
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ICS calendar file for delivery
          content:
            text/calendar:
              schema:
                type: string
        '404':
          description: Order not found

components:
  schemas:
    GroceryItem:
      type: object
      required:
        - quantity
        - item
      properties:
        quantity:
          type: integer
          description: Number of items to purchase
        item:
          type: string
          description: Name of the grocery item
        link:
          type: string
          description: Optional URL to the item

    ApprovalSchedule:
      type: object
      required:
        - day
        - time
      properties:
        day:
          type: string
          description: Day of the week for approval
        time:
          type: string
          description: Time of day for approval

    DeliverySchedule:
      type: object
      required:
        - day
        - window_start
        - window_end
      properties:
        day:
          type: string
          description: Day of the week for delivery
        window_start:
          type: string
          description: Start time of delivery window
        window_end:
          type: string
          description: End time of delivery window

    OrderMemory:
      type: object
      required:
        - user_id
        - items
        - approval_schedule
        - delivery_schedule
      properties:
        user_id:
          type: string
          description: Unique identifier for the user
        items:
          type: array
          items:
            $ref: '#/components/schemas/GroceryItem'
          description: List of grocery items in the order
        approval_schedule:
          $ref: '#/components/schemas/ApprovalSchedule'
          description: When to request approval for the order
        delivery_schedule:
          $ref: '#/components/schemas/DeliverySchedule'
          description: When to schedule delivery
        approval_status:
          type: string
          enum: ["approved", "rejected", "pending"]
          description: Current approval status
        approval_timestamp:
          type: string
          format: date-time
          description: When the approval was submitted

    ApprovalRequest:
      type: object
      required:
        - user_id
        - approval_status
        - timestamp
      properties:
        user_id:
          type: string
          description: Unique identifier for the user
        approval_status:
          type: string
          enum: ["approved", "rejected"]
          description: User's approval decision
        timestamp:
          type: string
          format: date-time
          description: When the approval was submitted

    FeedbackSubmission:
      type: object
      required:
        - user_id
        - order_id
        - feedback_text
        - timestamp
      properties:
        user_id:
          type: string
          description: Unique identifier for the user
        order_id:
          type: string
          description: Unique identifier for the order
        feedback_text:
          type: string
          description: User's feedback about the delivery
        timestamp:
          type: string
          format: date-time
          description: When the feedback was submitted
